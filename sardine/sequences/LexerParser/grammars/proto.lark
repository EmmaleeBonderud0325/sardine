// A pattern is a succession of things ////////////////////////////////////////

?start: pattern
pattern: (item|list) ("," (item|list)?)* -> return_pattern

///////////////////////////////////////////////////////////////////////////////

// Rules concerning lists and interaction with other tokens ///////////////////

item: (sum|col|patname)                            -> id
list: "[" item ("," item)* ","? "]"                -> make_list

///////////////////////////////////////////////////////////////////////////////


// Rules concerning numbers ///////////////////////////////////////////////////

?sum: product
    | product "+" sum                  -> addition
    | product "-" sum                  -> substraction
    | product "%" sum                  -> modulo

?product: atom
     | product "*" atom                -> multiplication
     | product "/" atom                -> division
     | product "//" atom               -> floor_division
     | product "|" atom                -> choice
     | product ":" atom                -> random_in_range
     | product "!" atom                -> extend
     | product "!!" atom               -> extend_repeat

?atom: NUMBER                                              -> number
     | "-" atom                                            -> negation
     | "$"                                                 -> get_time
     | "$" "." "m"                                         -> get_measure
     | "$" "." "p"                                         -> get_phase
     | "r"                                                 -> get_random_number
     | "i" "." LETTER                                      -> get_iterator
     | "i" "." LETTER "=" sum                              -> set_iterator
     | "i" "." LETTER "=" "[" sum "," sum "]"              -> set_iterator_step
     | "i" "." LETTER "." "reset"                          -> reset_iterator
     | "v" "." LETTER                                      -> get_variable
     | "v" "." LETTER "=" sum                              -> set_variable
     | "v" "." LETTER "." "reset"                          -> reset_variable
     | "T" "." "U"                                         -> get_unix_time
     | "T" "." "Y"                                         -> get_year
     | "T" "." "M"                                         -> get_month
     | "T" "." "D"                                         -> get_day
     | "T" "." "h"                                         -> get_hour
     | "T" "." "m"                                         -> get_minute
     | "T" "." "s"                                         -> get_second
     | "T" "." "Âµ"                                         -> get_microsecond
     | "{" sum "," sum "}"                                 -> generate_ramp
     | "{" sum "," sum "," sum  "}"                        -> generate_ramp_with_range
     | "[" sum ("," sum)* ","? "]"                         -> make_list
     | "c" "(" sum ")"                                     -> cosinus
     | "s" "(" sum ")"                                     -> sinus
     | "t" "(" sum ")"                                     -> tangente
     | SILENCE+                                            -> silence
     | "(" sum ")"


///////////////////////////////////////////////////////////////////////////////

// Rules concerning names /////////////////////////////////////////////////////

?patname: compose_name
    | compose_name ":" (sum|list)      -> assoc_sp_number
    | (compose_name|patname) "!" sum   -> repeat_name
    | compose_name "|" patname         -> choice_name

?compose_name: name
    | compose_name "/" name               -> specify_address

?name: NAME                               -> name_disamb
    | NAME sum                            -> name_from_name_number
    | "(" patname ")"

///////////////////////////////////////////////////////////////////////////////

// Rules about notes /////////////////////////////////////////////////////////

?col : note                                         -> id
     | col "->" name                                -> add_qualifier
     | col ":" name                                 -> add_modifier

?note: NOTE (NUMBER)? (FLAT|SHARP)? (OCTSHIFTUP|OCTSHIFTDOWN)* -> make_note
     | note "+"  (col|sum)                                     -> waddition
     | note "-"  (col|sum)                                     -> wsubstraction 
     | note "*"  (col|sum)                                     -> wmultiplication
     | note "%"  (col|sum)                                     -> wmodulo
     | note "/"  (col|sum)                                     -> wdivision
     | note "//" (col|sum)                                     -> wfloor_division
     | note "!" (sum|list)                                     -> extend
     | note "|"  note                                          -> choice
     | "(" col ")"

///////////////////////////////////////////////////////////////////////////////
     
// Tokens /////////////////////////////////////////////////////////////////////

A.0: "A"
B.0: "B"
C.0: "C"
D.0: "D"
E.0: "E"
F.0: "F"
G.0: "G"
NOTE.0: (A|B|C|D|E|F|G)
NAME.10: (LETTER)~2 (LETTER|DIGIT+)*
OCTSHIFTUP: "'"
OCTSHIFTDOWN: "."
FLAT: "b"
SHARP: "#"
SILENCE: "."

%import common.LETTER -> LETTER
%import common.DIGIT  -> DIGIT
%import common.NUMBER
%import common.WS_INLINE
%ignore WS_INLINE
